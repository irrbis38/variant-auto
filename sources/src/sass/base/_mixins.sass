@mixin r($width)
  @media only screen and (max-width: $width)
    @content
@mixin rh($height)
  @media only screen and (max-height: $height)
    @content

@mixin xl
  @media (max-width: 1600px)
    @content

@mixin lg
  @media (max-width: 1300px)
    @content

@mixin md
  @media (max-width: 1200px)
    @content

@mixin sm
  @media (max-width: 991px)
    @content

@mixin xs
  @media (max-width: 767px)
    @content

@mixin xxs
  @media (max-width: 575px)
    @content


@mixin hidescrollbar()
  // hide scrollbar in Firefox
  scrollbar-width: none

  // hide scrollbar in Chrome, Safari
  &::-webkit-scrollbar 
    -webkit-appearance: none
    display: none
    width: 0
    height: 0
  
@mixin customScrollbar($foregroundColor, $backgroundColor, $size)
  // Foreground, Background
  scrollbar-color: $foregroundColor $backgroundColor

  &::-webkit-scrollbar 
    width: $size // Mostly for vertical scrollbars
    height: $size // Mostly for horizontal scrollbars

    // Foreground
  &::-webkit-scrollbar-thumb
    background: $foregroundColor

    // Background
  &::-webkit-scrollbar-track
    background: $backgroundColor

  // for Mozilla
  scrollbar-width: thin


//Hide only visually, but have it available for screenreaders
@mixin visuallyhidden()
    border: 0
    clip: rect(0 0 0 0)
    height: 1px
    margin: -1px
    overflow: hidden
    padding: 0
    position: absolute
    width: 1px


@mixin pictureSaveRatio($objectFit)

  picture 
    position: absolute
    top: 0
    left: 0
    z-index: 1
    display: block
    width: 100%
    height: 100%  

  img 
    display: block
    width: 100%
    height: 100%
    object-fit: $objectFit
  


@mixin elementSaveRatio($paddingTop, $objectFit)
  position: relative

  &::after
    content: ""
    display: block
    width: 100%
    padding-top: $paddingTop

  @include pictureSaveRatio($objectFit)

  



@mixin font-face($font-name,$font-file)
    @font-face
        font-family: '#{$font-name}'
        font-display: swap
        src: url('../fonts/#{$font-file}.woff') format('woff'), url('../fonts/#{$font-file}.woff2') format('woff2')


// Fluid fonts
// See https://habr.com/post/310186/
// Also check _layout.sass, fix for Safari is required

@function strip-unit($number)
    @if type-of($number) == 'number' and not unitless($number)
        @return calc($number / ($number * 0 + 1px))
    @return $number
@function calcFluidFontSize($f-min, $f-max, $w-min, $w-max, $units: px)
    $f-min: strip-unit($f-min)
    $f-max: strip-unit($f-max)
    $w-min: strip-unit($w-min)
    $w-max: strip-unit($w-max)

    $k: calc(($f-max - $f-min)/($w-max - $w-min))
    $b: $f-min - $k * $w-min

    $b: $b + $units

    @return calc( #{$k} * 100vw + #{$b} )

@mixin fluidFontSize($f-min, $f-max, $w-min, $w-max, $fallback: false)
    font-size: $f-min
    @media (min-width: $w-min)
        @if ($fallback)
            font-size: $fallback
        font-size: calcFluidFontSize($f-min, $f-max, $w-min, $w-max, px)
    @media (min-width: $w-max)
        font-size: $f-max
